image: docker:dind

# When using dind, it's wise to use the overlayfs driver for
# improved performance.
variables:
  DOCKER_DRIVER: overlay2

services:
- docker:dind

before_script:
  - export DOCKER_HOST="tcp://localhost:2375"
  - docker info

stages:
  - test
  - build
  - deploy

test:
  stage: test
  script:
    - echo "Running tests"
    - echo ${KUBERNETES_SERVICE_ACCOUNT}


build_image:
  script:
    - export DOCKER_HOST="tcp://localhost:2375"
#    - docker build -t $CI_REGISTRY_IMAGE:latest -f deployment/Dockerfile .
    # push only for tags
#    - "[[ -z $CI_BUILD_TAG ]] && exit 0"
#    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
#    - docker push $CI_REGISTRY_IMAGE:latest


deploy_staging:
  stage: deploy
  image: docker:stable
  script:
    - export DOCKER_HOST="tcp://localhost:2375"
    - echo "Deploy to staging server"
    - apt-get update && apt-get install -y apt-transport-https
    - curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
    - cat <<EOF >/etc/apt/sources.list.d/kubernetes.list
    - deb http://apt.kubernetes.io/ kubernetes-xenial main
    - EOF
    - apt-get update
    - apt-get install -y kubectl
    - echo "${KUBE_URL}"
    - echo "${KUBE_CA_PEM}" > kube_ca.pem
    - kubectl config set-cluster default-cluster --server=${KUBE_URL} --certificate-authority="$(pwd)/kube_ca.pem"
    - kubectl config set-credentials default-admin --token=${KUBE_TOKEN}
    - kubectl config set-context default-system --cluster=default-cluster --user=default-admin --namespace ${KUBE_NAMESPACE}
    - kubectl config use-context default-system
    - kubectl cluster-info
#    - which kubectl
#    - |
#    cat <<EOF | kubectl apply -f -
#        kind: Namespace
#        apiVersion: v1
#        metadata:
#          name: $KUBE_NAMESPACE
#        EOF
  environment:
    name: staging
    url: http://staging.dj.k8.example.com
  only:
  - master
